Description: Fix roff warnings from Lintian caused by use of non-standard .ig >> / .>>
 Fix spellings
Forwarded: not-needed
--- a/man/man1/pl.1
+++ b/man/man1/pl.1
@@ -1,4 +1,4 @@
-.ig >>
+.ig
 <STYLE TYPE="text/css">
 <!--
         A:link{text-decoration:none}
@@ -30,7 +30,7 @@
 <td>
 <br>
 <br>
-.>>
+..
 
 .TH ploticus 1 "11-MAR-2009   PLOTICUS ploticus.sourceforge.net"
 
@@ -44,10 +44,10 @@
 .br
 \fCploticus \fIscriptfile\fC  [\fI-options\fC]  
 
-.ig >>
+.ig
 <br><br><br>
-.>>
-.ig >>
+..
+.ig
 <table cellpadding=2 border=0 ><tr bgcolor=FFFFEC><td colspan=2>
 <b>Quick links for finding things on this page:</b>
 </td></tr><tr bgcolor=FFFFEC><td valign=top>
@@ -74,211 +74,211 @@
   <li> <a href="#author">Author, Copyright, Licensing</a>
   <li> <a href="#seealso">See also</a>
 </td></tr></table>
-.>>
+..
 
-.ig >>
+.ig
 <a name=description></a>
-.>>
-.ig >>
+..
+.ig
 <br><br><br>
-.>>
+..
 .SH Description
 \fBploticus\fR is the primary component of the 
-.ig >>
+.ig
 <a href="http://ploticus.sourceforge.net">
-.>>
+..
 \0'ploticus' data display package
-.ig >>
+.ig
 </a>
-.>>
+..
 .LP
 \fBploticus\fR is a program that produces plots and charts from data, and 
 produces results that can be viewed on web pages, paper, slides,
 or interactively on the screen.  Standard types of plots may be
 done using
-.ig >>
+.ig
 <a href="prefabs.html">
-.>>
+..
 \0prefab plot templates
-.ig >>
+.ig
 </a>
-.>>
+..
 , or a user-developed 
-.ig >>
+.ig
 <a href="scripts.html">
-.>>
+..
 \0script file
-.ig >>
+.ig
 </a>
-.>>
+..
 may be supplied for greater flexibility and customization.
 \fBploticus\fR may be executed from the command line or 
-.ig >>
+.ig
 <a href="cgi.html">
-.>>
+..
 \0as a CGI program.
-.ig >>
+.ig
 </a>
-.>>
+..
 .LP
 For complete online docs and downloads see 
-.ig >>
+.ig
 <a href="http://ploticus.sourceforge.net">
-.>>
+..
 \0http://ploticus.sourceforge.net
-.ig >>
+.ig
 </a>
-.>>
+..
 
-.ig >>
+.ig
 <br><br><br>
-.>>
+..
 
-.ig >>
+.ig
 <a name=findexamples></a>
-.>>
+..
 
 .SH Where to find examples
 See the various
-.ig >>
+.ig
 <a href="prefabs.html">
-.>>
+..
 \0prefab examples
-.ig >>
+.ig
 </a>
-.>>
+..
 \0.
 A large number of 
-.ig >>
+.ig
 <a href="../gallery/index.html">
-.>>
+..
 \0script examples
-.ig >>
+.ig
 </a>
-.>>
+..
 are also available.
 Some 
-.ig >>
+.ig
 <a href="#examples">
-.>>
+..
 \0usage examples
-.ig >>
+.ig
 </a>
-.>>
+..
 are also shown below.
 
 
-.ig >>
+.ig
 <br><br><br>
-.>>
-.ig >>
+..
+.ig
 <a name=options></a>
 <br>
-.>>
+..
 
 .SH Command line arguments
 
 .LP
 Command line arguments may generally be given in any order.
 If there are arguments that you want to always have in effect, you can invoke them from a
-.ig >>
+.ig
 <a href="config.html">
-.>>
+..
 \0config file.
-.ig >>
+.ig
 </a>
-.>>
+..
 Many settings can also be made dynamically from scripts via
-.ig >>
+.ig
 <a href="settings.html">
-.>>
+..
 \0proc settings
-.ig >>
+.ig
 </a>
-.>>
+..
 or
-.ig >>
+.ig
 <a href="page.html">
-.>>
+..
 \0proc page.
-.ig >>
+.ig
 </a>
-.>>
+..
 Processing occurs in this order: first the config file is read; then command line args are processed (left to right); 
 then 
-.ig >>
+.ig
 <a href="page.html">
-.>>
+..
 \0proc page
-.ig >>
+.ig
 </a>
-.>>
+..
 and/or 
-.ig >>
+.ig
 <a href="settings.html">
-.>>
+..
 \0proc settings.
-.ig >>
+.ig
 </a>
-.>>
+..
 Later settings override earlier ones.
 
 
-.ig >>
+.ig
 <a name=basic></a>
-.>>
-.ig >>
+..
+.ig
 <br><br>
-.>>
+..
 
 .SH Basic command line options
 .LP
 \fB-prefab\fR 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fIprefabname\fR
 .IP \0
 Produce a plot using a 
-.ig >>
+.ig
 <a href="prefabs.html">
-.>>
+..
 \0prefab
-.ig >>
+.ig
 </a>
-.>>
+..
 plot template.
 \fIprefabname\fR identifies the template, eg.
 \fCcron\fR or \fCvbars\fR.
 Necessary parameters are supplied on the command line using the form \fIparm=value\fR.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 .LP
 \fIscriptfile\fR  
 .br
 \fB-f \fIscriptfile\fR
 .IP \0
 names a
-.ig >>
+.ig
 <a href="scripts.html">
-.>>
+..
 \0script file
-.ig >>
+.ig
 </a>
-.>>
+..
 that will be interpreted to produce results.
 Alternatively, \fB-stdin\fR may be used to indicate
 that script will be available on standard input.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
-.ig >>
+.ig
 <a name=varvalue></a>
-.>>
+..
 .LP
 \fIvariable\fC=\fIvalue\fR
 .IP \0
@@ -291,15 +291,15 @@
 .br
 sets the variable \fCCUTDATE\fR to \fC10-31-98\fR.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-o 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fIoutfile\fC | stdout\fR
 .IP \0
 Specify a filename where the result will be written.
@@ -308,26 +308,26 @@
 If \fC-o stdout\fR is used,
 result will be sent to standard output.  
 If \fB-o\fR is not specified, a 
-.ig >>
+.ig
 <a href="#outfile">
-.>>
+..
 \0default output filename
-.ig >>
+.ig
 </a>
-.>>
+..
 will be used.  
 .br
 Example: \fC-o fp001.png\fR
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-dir 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fIdirname\fR
 .IP \0
 Set ploticus' working directory to \fIdirname\fR.
@@ -335,163 +335,163 @@
 since it affects evaluation of other args.
 
 
-.ig >>
+.ig
 <a name=resultformat></a>
-.>>
+..
 
-.ig >>
+.ig
 <br><br><br>
-.>>
+..
 
 .SH Result format options
 .LP
 (Availability depends on your ploticus configuration/build)
 .LP
 \fB-png \fR 
-.ig >>
+.ig
 &nbsp; &nbsp; &nbsp;
-.>>
+..
 PNG image
 
 .LP
 \fB-gif \fR
-.ig >>
+.ig
 &nbsp; &nbsp; &nbsp; &nbsp;
-.>>
+..
 pseudo-GIF image
 
 .LP
 \fB-jpeg\fR
-.ig >>
+.ig
 &nbsp; &nbsp; 
-.>>
+..
 JPEG image 
 
 .LP
 \fB-svg\fR or \fB-svgz\fR
-.ig >>
+.ig
 &nbsp; &nbsp; &nbsp;
-.>>
-.ig >>
+..
+.ig
 <a href="svg.html">
-.>>
+..
 \0SVG
-.ig >>
+.ig
 </a>
-.>>
+..
 graphic.  
 See also SVG / XML options below.
 
 .LP
 \fB-swf\fR
-.ig >>
+.ig
 &nbsp; &nbsp; &nbsp;
-.>>
-.ig >>
+..
+.ig
 <a href="swf.html">
-.>>
+..
 \0SWF
-.ig >>
+.ig
 </a>
-.>>
+..
 (flash) result.
 
 .LP
 \fB-wbmp\fR
-.ig >>
+.ig
 &nbsp; 
-.>>
+..
 WBMP image
 
 
 .LP
 \fB-eps \fR
-.ig >>
+.ig
 &nbsp; &nbsp; &nbsp;
-.>>
+..
 EPS (encapsulated PostScript) 
 
 .LP
 \fB-ps \fR
-.ig >>
+.ig
 &nbsp; &nbsp; &nbsp; &nbsp; 
-.>>
+..
 paginated PostScript to stdout
 
 .LP
 \fB-x11 \fR
-.ig >>
+.ig
 &nbsp; &nbsp; &nbsp; &nbsp; 
-.>>
+..
 display on X11 screen
 
 .LP
 \fB-drawdump\fR
 \fIfilename\fR
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 produce no visible graphic; save a generic representation of the graphic result to a file.
 By using \fC-drawdump\fR and \fC-drawdumpa\fR you can easily 
-.ig >>
+.ig
 <a href="prefabs.html#drawdump">
-.>>
+..
 \0overlay or combine results from separate ploticus runs.
-.ig >>
+.ig
 </a>
-.>>
+..
 The drawdump file can be rendered later in any desired format, using this command:
 \fCploticus \-prefab draw dumpfile=\fIfilename\fR 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 or by using
-.ig >>
+.ig
 <a href="drawcommands.html">
-.>>
+..
 \0proc drawcommands.
-.ig >>
+.ig
 </a>
-.>>
+..
 Drawdump capability is available in all builds. (2.30+)
 .LP
 \fB-drawdumpa\fR
 \fIfilename\fR
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 same as \fC-drawdump\fR but result is \fBappended\fR to file.
 
 
 
-.ig >>
+.ig
 <a name=clickmap></a>
-.>>
+..
 
-.ig >>
+.ig
 <br><br><br>
-.>>
+..
 .SH Clickable image maps and mouseover options
 
 .LP
 \fB-csmap\fR
 .IP \0
 produce a 
-.ig >>
+.ig
 <a href="clickmap.html">
-.>>
+..
 \0client-side clickable imagemap
-.ig >>
+.ig
 </a>
-.>>
+..
 to accompany a png, gif, or jpeg.
 These can be used for hyperlinks, and also for providing
 pop-up text labels that appear when the mouse passes over a region.
 By default, client-side map content is written to stdout.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-csmapdemo\fR
@@ -499,58 +499,58 @@
 Same as \fB-csmap\fR but all mapped regions are shown outlined in green,
 and a complete HTML chunk is produced which involves the output image name.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-mapfile\fR 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fIfilename\fC | stdout | stderr\fR
 .IP \0
 explicitly name the output file containing the map info.  The name may also be set in 
-.ig >>
+.ig
 <a href="page.html">
-.>>
+..
 \0proc page.
-.ig >>
+.ig
 </a>
-.>>
+..
 If a name is not specified, client-side image map info will be written to stdout;
 For SVG this parameter is not needed, since image map info is embedded in the SVG file.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 .LP
 \fB-map\fR
 .IP \0
 produce a 
-.ig >>
+.ig
 <a href="clickmap.html">
-.>>
+..
 \0server-side clickable imagemap file
-.ig >>
+.ig
 </a>
-.>>
+..
 to accompany a png, gif, jpeg, or SVG.   
 \fBNote: server-side maps are deprecated.\fR
 
-.ig >>
+.ig
 <a name=resultsize></a>
-.>>
-.ig >>
+..
+.ig
 <br><br><br>
-.>>
+..
 
 .SH Result sizing options
 .LP
 \fB-scale\fR 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fIsx\fR[,\fIsy\fR]
 .IP \0
 Scale the final result.
@@ -562,27 +562,27 @@
 .br
 Example: \fC-scale 0.7\fR
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-pagesize\fR 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fIwidth,height\fR
 .IP \0
 Sets the pre-crop size of the result image for GIF/PNG/JPEG, or sets the display window size when drawing to X11.  
 On other output devices this option does nothing.
 \fIwidth\fR and \fIheight\fR are in 
-.ig >>
+.ig
 <a href="attributetypes.html#positionunits">
-.>>
+..
 \0absolute units.
-.ig >>
+.ig
 </a>
-.>>
+..
 0,0 is the lower left corner.
 If \-pagesize is not specified, the default size will be 8" x 8".
 Size is set before any drawing takes place and is unaffected by the \-scale option.
@@ -598,9 +598,9 @@
 .IP
 Example: \fC\-pagesize 7,3\fR
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-tightcrop\fR
@@ -609,26 +609,26 @@
 the design.  Normally a small margin is allowed on all four sides.
 This option sometimes crops a bit too tight; if so try \fB-croprel\fR.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-crop\fR 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fIx1,y1,x2,y2\fR
 .IP \0
 Crop image or EPS result to the box specified by
 \fIx1,y1\fR and \fIx2,y2\fR, in 
-.ig >>
+.ig
 <a href="attributetypes.html#positionunits">
-.>>
+..
 \0absolute units.
-.ig >>
+.ig
 </a>
-.>>
+..
 
 Note that there may be no spaces in the coordinates specification.
 Cropping takes place after design is rendered and does not
@@ -636,27 +636,27 @@
 .br
 Example: \fC-crop 1.2,0.8,4.4,5.2\fR
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-croprel\fR 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fIleft,bottom,right,top\fR
 .IP \0
 Crop image or EPS result tightly to the extent of the design (like \fB-tightcrop\fR),
 but then adjust the cropping outward or inward on one or more sides.
 \fIleft\fR is the amount to adjust the left side, in 
-.ig >>
+.ig
 <a href="attributetypes.html#positionunits">
-.>>
+..
 \0absolute units.
-.ig >>
+.ig
 </a>
-.>>
+..
 Similarly for \fIbottom\fR, \fIright\fR, and \fItop\fR.
 Positive values always adjust outward from center; negative values adjust inward (tighter).
 There may be no spaces in the \fIleft,bottom,right,top\fR specification.
@@ -665,15 +665,15 @@
 .br
 Example: \fC-croprel 0,\-0.1,0,0.1\fR
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-pixsize\fR
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fIwidth,height\fR
 .IP \0
 If specified, result PNG/GIF/JPG image will be created at exactly this width and height in pixels.
@@ -681,201 +681,201 @@
 User is also responsible for setting \-pagesize appropriately for larger images.
 New in 2.40
 
-.ig >>
+.ig
 <a name=graphic></a>
-.>>
+..
 
-.ig >>
+.ig
 <br><br><br>
-.>>
+..
 
 
 .SH Graphics environment options
 .LP
 \fB-font\fR 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fIfont\fR 
 .IP \0
 sets the overall font to \fIfont\fR.  See
-.ig >>
+.ig
 <a href="fonts.html">
-.>>
+..
 \0fonts
-.ig >>
+.ig
 </a>
-.>>
+..
 for more info.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-textsize\fR 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fIpointsize\fR 
 .IP \0
 sets the overall default textsize to \fIpointsize\fR.
 All embedded size specifications will be rendered relative to this.
 
-.ig >>
+.ig
 <br><br><br>
-.>>
+..
 
 .LP
 \fB-linewidth\fR 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fIw\fR 
 .IP \0
 sets the overall default linewidth to \fIw\fR.
 All embedded line width specifications will be rendered relative to this.
 See linedetails(pli) for more on line width.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 .LP
 \fB-color\fR 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
-.ig >>
+..
+.ig
 <a href="color.html">
-.>>
+..
 \0color
-.ig >>
+.ig
 </a>
-.>>
+..
 .IP \0
 sets the overall default text and line drawing color to \fIcolor\fR.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-backcolor\fR 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
-.ig >>
+..
+.ig
 <a href="color.html">
-.>>
+..
 \0color
-.ig >>
+.ig
 </a>
-.>>
+..
 .IP \0
 sets the background color to \fIcolor\fR.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
-.ig >>
+.ig
 <a name=cm></a>
-.>>
+..
 .LP
 \fB-cm\fR
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 .IP \0
 Use centimeters as your absolute units, instead of inches.
 On the command line this must appear to the left of any arguments dealing with
 absolute unit values, such as \-pagesize.
 Centimeter absolute units can also be set via
-.ig >>
+.ig
 <a href="../doc/settings.html">
-.>>
+..
 \0proc settings.
-.ig >>
+.ig
 </a>
-.>>
+..
 If cm will always be the desired
 absolute units, the preferred way to achieve this is by using 
 \fCunits: cm\fR in a 
-.ig >>
+.ig
 <a href="../doc/config.html">
-.>>
+..
 \0ploticus config file.
-.ig >>
+.ig
 </a>
-.>>
+..
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-inches\fR
 .IP \0
 Use inches as your absolute units.  This is the default.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-outlabel\fR  
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fIlabel\fR
 .IP \0
 Set the label or title for the output.  For X11 this sets the window title;
 for PostScript and SVG it sets the \fC%%Title\fR attribute.
 
-.ig >>
+.ig
 <a name=capacity></a>
-.>>
+..
 
-.ig >>
+.ig
 <br><br><br>
-.>>
+..
 .SH Capacity setting options
 These options (new with version 2.10) allow capacities to be raised for accomodation 
 of very large data sets, or lowered to minimize memory usage.
 The defaults in this section are defined in \fCpl.h\fR.
 .LP
 \fB-maxrows 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fInrows\fR
 .IP \0
 Set the capacity for data rows to \fInrows\fR.  Default \fInrows\fR is 10,000.
 Ploticus will allocate one pointer for each row.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-maxfields 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fInfields\fR
 .IP \0
 Set the capacity for data fields to \fInfields\fR.  Default \fInfields\fR is 200,000.
 Ploticus will allocate one pointer for each field.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-maxproclines  
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fInlines\fR
 .IP \0
 Set the capacity for script lines for active procs to \fInlines\fR.
@@ -884,15 +884,15 @@
 all proc getdata procs that contain embedded \fCdata\fR.
 Ploticus will allocate one pointer for each line in each active proc.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-maxvector  
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fIncells\fR
 .IP \0
 Set the capacity for the data plotting vector to \fIncells\fR.
@@ -901,36 +901,36 @@
 values for situations where the values must be sorted or pre-screened for
 bad values.  Ploticus will allocate one \fCdouble\fR value for each cell.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 .LP
 \fB-maxdrawpoints
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fIn\fR
 .IP \0
 Use this if you need to render a polygon having more than 500 points in PNG/GIF/JPEG, X11, or SWF, or
 any continuous line having more than 500 points in SWF.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 .LP
 Note: raising the maximum number of categories may be done using
-.ig >>
+.ig
 <a href="categories.html">
-.>>
+..
 \0proc categories
-.ig >>
+.ig
 </a>
-.>>
+..
 from within the script.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 .LP
 \fB-cpulimit\fR
 #Include nbsp2
@@ -940,29 +940,29 @@
 New in 2.40
 
 
-.ig >>
+.ig
 <br><br><br>
-.>>
-.ig >>
+..
+.ig
 <a name=svg></a>
-.>>
+..
 
 .SH SVG / XML options:
 
 .LP
 \fB-svg_tagparms\fR 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fIstring\fR
 .IP \0
 This allows arbitrary \fCtext\fR to be inserted into the opening \fC<svg>\fR tag.
 .br
 Example: \fC-svg_tagparms 'height="10cm" width="15cm"'\fR
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-omit_xml_declaration\fR  
@@ -971,32 +971,32 @@
 Use this option to suppress the XML declaration line if
 the SVG result is to be embedded into a larger XML document.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-xml_encoding\fR  
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fImethod\fR
 .IP \0
 Set the XML character encoding method.  This encoding will be indicated in the XML declaration line.
 The default is \fCiso-8859-1\fR which provides Latin and Western European character sets.
 For Unicode fonts this should be set to \fCutf-8\fR (for more discussion see the Unicode section in
-.ig >>
+.ig
 <a href="fonts.html">
-.>>
+..
 \0fonts
-.ig >>
+.ig
 </a>
-.>>
+..
 ).
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-tag\fR 
@@ -1004,9 +1004,9 @@
 Causes a suitable
 HTML \fC<EMBED>\fR tag to be written to standard output.  
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-zlevel \fIn\fR 
@@ -1015,40 +1015,40 @@
 (0 - 9 where 9 is highest level of compression and the default).
 
 
-.ig >>
+.ig
 <a name=interact></a>
-.>>
+..
 
-.ig >>
+.ig
 <br><br><br>
-.>>
+..
 .SH Interactive (workstation) use options 
 .LP
 \fB-winloc\fR 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fIx,y\fR
 .IP \0
 Control where on the screen the upper-left corner of the X11 display
 window will be placed.  \fIx\fR and \fIy\fR are in pixels.
 Example: \fC-winloc 200 0\fR
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-v\fR 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fIcommand\fR
 .br
 \fB-viewer\fR 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fIcommand\fR
 .IP \0
 After generating results in the specified format, execute \fIcommand\fR
@@ -1062,9 +1062,9 @@
 your command search path.
 This option may not be used with \fC-o stdout\fR.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-noshell\fR
@@ -1074,12 +1074,12 @@
 was sent to you by an unknown party.  New in 2.31
 
 
-.ig >>
+.ig
 <a name=paper></a>
-.>>
-.ig >>
+..
+.ig
 <br><br><br>
-.>>
+..
 
 .SH Paper orientation options
 .LP
@@ -1087,54 +1087,54 @@
 .IP \0
 For paginated postscript, set paper orientation to landscape (oblong).
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-portrait\fR  
 .IP \0
 For paginated postscript, set paper orientation to portrait.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-posteroffset\fR  
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fIx,y\fR
 .IP \0
 Allows production of large-size posters made up of multiple standard
 sheets of paper butted together.  May be used only with paginated PostScript,
 and should be used in combination with the \fC-scale\fR and \fC-textsize\fR
 options.  \fIx,y\fR is the point within your result (in
-.ig >>
+.ig
 <a href="attributetypes.html#positionunits">
-.>>
+..
 \0absolute units
-.ig >>
+.ig
 </a>
-.>>
+..
 ) that is to be placed at the lower left corner of the page.
 For further discussion of this, see
-.ig >>
+.ig
 <a href="posters.html">
-.>>
+..
 \0posters
-.ig >>
+.ig
 </a>
-.>>
+..
 \0.
 
-.ig >>
+.ig
 <a name=debug></a>
-.>>
-.ig >>
+..
+.ig
 <br><br><br>
-.>>
+..
 
 .SH Development and debugging options
 .LP
@@ -1148,23 +1148,23 @@
 on all arguments gotten.
 Another effect of debug mode is that any temporary files are not removed upon termination.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 .LP
 \fB-ping\fR
 .IP \0
 Write the ploticus name and version number to standard output and exit.  versions 2.33+
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-echo\fR 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fC[ diag | stdout]\fR
 .IP \0
 Write ploticus script lines as they are executed.  Lines are written to 
@@ -1172,58 +1172,58 @@
 Lines are written after variables
 and most script directives, including flow-of-control directives, are evaluated.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-showbad\fR
 .IP \0
 Identify unplottable data, showing the value, and its row and field.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-diagfile\fR 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fIfilename | stderr | stdout\fR
 .IP \0
 All non-error messages and output will be written to this file (default is stderr).
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-errmsgpre\fR
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fItag\fR
 .IP \0
 Allows developer to set the first portion of all ploticus error messages to \fCtag\fR
 for purposes of presentation or identification.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-errfile\fR 
-.ig >>
+.ig
 &nbsp; &nbsp;
-.>>
+..
 \fIfilename | stderr | stdout\fR
 .IP \0
 All error messages will be written to this file (default is stderr).
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fB-help\fR or \fB-?\fR or \fB-version\fR
@@ -1231,13 +1231,13 @@
 Print version number, copyright info, web site address, etc.
 
 
-.ig >>
+.ig
 <br><br><br>
-.>>
+..
 
-.ig >>
+.ig
 <a name=outfile></a>
-.>>
+..
 
 .SH Output file names
 The output file may be specified on the command line using the \fB-o\fR option,
@@ -1263,31 +1263,31 @@
 each page's output file name to indicate page \fIn\fR.
 .LP
 If a 
-.ig >>
+.ig
 <a href="clickmap.html">
-.>>
+..
 \0clickmap
-.ig >>
+.ig
 </a>
-.>>
+..
 is being generated, the result file is named similarly to the above.
 
-.ig >>
+.ig
 <a name=examples></a>
-.ig >>
+.ig
 <br><br><br>
-.>>
+..
 
 .SH Usage examples
 .LP
 The following example uses the 
-.ig >>
+.ig
 <a href="scat.html">
-.>>
+..
 \0scat prefab:
-.ig >>
+.ig
 </a>
-.>>
+..
 .IP \0
 \fCploticus \-prefab scat \-png datafile=results.dat x=2 y=3\fR
 
@@ -1317,47 +1317,47 @@
  \fCploticus \-ps lineplot1.p \-veiwer gv\fR = produce paginated postscript
 and view using ghostview.
 
-.ig >>
+.ig
 <br><br><br>
-.>>
-.ig >>
+..
+.ig
 <a name=environment></a>
-.>>
+..
 .SH Environment
 .LP
 \fBPLOTICUS_CONFIG\fR 
 .IP \0
 The name of a 
-.ig >>
+.ig
 <a href="config.html">
-.>>
-\0ploticus configuation file
-.ig >>
+..
+\0ploticus configuration file
+.ig
 </a>
-.>>
+..
 , for setting default date notations, number
 notations, measurement units, etc.  
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 .LP
 \fBPLOTICUS_PREFABS\fR
 .IP \0
 The path name of a directory where ploticus will look for
-.ig >>
+.ig
 <a href="prefabs.html">
-.>>
+..
 \0prefab
-.ig >>
+.ig
 </a>
-.>>
+..
 scripts.  The "factory" prefabs are located in 
 the ploticus ./prefabs subdirectory.
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 .LP
 \fBLC_CTYPE\fR, \fBLC_COLLATE\fR, \fBLANG\fR
 .IP \0
@@ -1366,9 +1366,9 @@
 built with \-DLOCALE for this to work.
 
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 .LP
 \fBTDH_ERRMODE\fR
 .IP \0
@@ -1376,75 +1376,75 @@
 which is the default, and \fCcgi\fR which causes error messages to be written 
 to stdout with html formatting.
 
-.ig >>
+.ig
 <br><br><br>
-.>>
-.ig >>
+..
+.ig
 <a name=bugs></a>
-.>>
+..
 
 .SH Bugs
 Ploticus has some stated
-.ig >>
+.ig
 <a href="limits.html">
-.>>
+..
 \0limitations
-.ig >>
+.ig
 </a>
-.>>
+..
 (mostly related to capacities that you may run into if you're dealing with large data sets).  
 To report problems or get help see the
-.ig >>
+.ig
 <a href="support.html">
-.>>
+..
 \0ploticus support page.
-.ig >>
+.ig
 </a>
-.>>
+..
 
-.ig >>
+.ig
 <a name=author></a>
-.>>
-.ig >>
+..
+.ig
 <br><br><br>
-.>>
+..
 
 .SH Author, Copyright, Licensing
 The primary author is 
-.ig >>
+.ig
 <a href="http://ploticus.sourceforge.net/steve.html">
-.>>
+..
 \0Stephen C. Grubb.
-.ig >>
+.ig
 </a>
-.>>
+..
 Ploticus covered by the General Public License (GPL)... please see the
-.ig >>
+.ig
 <a href="Copyright.html">
-.>>
+..
 \0ploticus copyright page
-.ig >>
+.ig
 </a>
-.>>
+..
 for more info.
 
-.ig >>
+.ig
 <a name=seealso></a>
-.>>
-.ig >>
+..
+.ig
 <br><br><br>
-.>>
+..
 
 .SH See also
-.ig >>
+.ig
 <a href="http://ploticus.sourceforge.net">
-.>>
+..
 \0http://ploticus.sourceforge.net
-.ig >>
+.ig
 </a>
-.>>
+..
 
-.ig >>
+.ig
 <br>
 <br>
 </td></tr>
@@ -1470,4 +1470,4 @@
 
 
 </center>
-.>>
+..
--- a/man/man3/libploticus.3
+++ b/man/man3/libploticus.3
@@ -1,4 +1,4 @@
-.ig >>
+.ig
 <STYLE TYPE="text/css">
 <!--
         A:link{text-decoration:none}
@@ -30,7 +30,7 @@
 <td>
 <br>
 <br>
-.>>
+..
 
 .TH libploticus 3 "11-MAR-2009   PLOTICUS ploticus.sourceforge.net"
 
@@ -42,13 +42,13 @@
 .LP
 This simple C language API 
 has all of the funcionality of the
-.ig >>
+.ig
 <a href="pl.1.html">
-.>>
+..
 \0ploticus program
-.ig >>
+.ig
 </a>
-.>>
+..
 and is similarly covered by the General Public License.
 .LP
 \fBlibploticus\fR is built using \fCMakefile\fR.
@@ -78,9 +78,9 @@
 
 
 
-.ig >>
+.ig
 <br><br><br>
-.>>
+..
 .SH Examples
 Here's a simple example (it may be found in \fC./pltestsuite/api_examp.c\fR)
 .nf
@@ -102,9 +102,9 @@
  \0 }
 .fi
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .SH Multi-job example
 Another included example, which invokes a series of 25+ plot jobs, is in \fC./src/api_test.c
@@ -117,9 +117,9 @@
 .fi
 Then, go to the \fCpltestsuite\fR directory and type: \fC../src/api_test\fR
 
-.ig >>
+.ig
 <br><br><br>
-.>>
+..
 
 .SH libploticus API
 
@@ -127,13 +127,13 @@
 \fCploticus_init( char *device, char *outfilename )\fR
 .IP \0
 Initialize, read your 
-.ig >>
+.ig
 <a href="config.html">
-.>>
+..
 \0ploticus config file
-.ig >>
+.ig
 </a>
-.>>
+..
 if any, and set the output \fCdevice\fR to one of 
 \fCpng\fR, \fCgif\fR, \fCx11\fR, \fCsvg\fR, \fCjpeg\fR, \fCeps\fR, or \fCswf\fR.
 (Not all devices may be available, depending on the build.)
@@ -145,21 +145,21 @@
  \0 if( stat != 0 ) \fIerror\fR
 .fi
 
-.ig >>
+.ig
 <br><br><br>
-.>>
+..
 
 .LP
 \fCploticus_arg( name, value )\fR
 .IP \0
 Specify a 
-.ig >>
+.ig
 <a href="pl.1.html#options">
-.>>
+..
 \0pl command line argument.
-.ig >>
+.ig
 </a>
-.>>
+..
 \fCname\fR specifies the argument name and \fCvalue\fR an argument value.
 If there is no argument value, \fCvalue\fR should be passed as \fC""\fR.
 All arguments are supported except \fC-f\fR, \fC-prefab\fR, and \fC-ver\fR.
@@ -174,33 +174,33 @@
   \0 if( stat != 0 ) \fIerror\fR
 .fi
 
-.ig >>
+.ig
 <br><br>
-.>>
+..
 
 .LP
 \fCploticus_begin( )\fR
 .IP \0
 This function is no longer necessary.  Old code that uses it will still be OK.
 
-.ig >>
+.ig
 <br><br><br>
-.>>
+..
 
 .LP
 \fCploticus_execline( char *line )\fR
 .IP \0
 Interpret one "raw" 
-.ig >>
+.ig
 <a href="scripts.html">
-.>>
+..
 \0ploticus script
-.ig >>
+.ig
 </a>
-.>>
+..
 line.  
 Typically called multiple times, allowing ploticus scripts to be 
-generated programatically.  Script lines can contain only these directives: \fC #proc\fR, \fC #procdef\fR, 
+generated programmatically.  Script lines can contain only these directives: \fC #proc\fR, \fC #procdef\fR, 
 \fC #endproc\fR, \fC #clone\fR and \fC #saveas\fR.  
 You can't use set, if/else, loops, or other flow-of-control 
 directives (but these types of things can be handled by your host application).
@@ -217,39 +217,39 @@
 \fBCaution\fR As of ploticus version 2.40 string constants cannot be passed in this function.  See the example
 in the page intro above.
 
-.ig >>
+.ig
 <br><br><br>
-.>>
+..
 
 .LP
 \fCploticus_execscript( char *scriptfile, int prefabflag )\fR
 .IP \0
 Interpret an entire 
-.ig >>
+.ig
 <a href="scripts.html">
-.>>
+..
 \0ploticus script file
-.ig >>
+.ig
 </a>
-.>>
+..
 or 
-.ig >>
+.ig
 <a href="prefabs.html">
-.>>
+..
 \0prefab.
-.ig >>
+.ig
 </a>
-.>>
+..
 \fCscriptfile\fR is the name of the ploticus script file.  There are no
 syntax limitations as with \fCploticus_execline()\fR.
 \fCprefabflag\fR is \fC1\fR, then \fCscriptfile\fR is taken to be a
-.ig >>
+.ig
 <a href="prefabs.html">
-.>>
+..
 \0ploticus prefab
-.ig >>
+.ig
 </a>
-.>>
+..
 name such as \fCvbars\fR.  
 If \fCprefabflag\fR is \fC0\fR, then \fCscriptfile\fR should be a pathname.
 .IP 
@@ -261,18 +261,18 @@
 .br
 Example: \fCstat = ploticus_execscript( "/home/steve/plfiles/myscript.pl", 0 );\fR
 
-.ig >>
+.ig
 <br><br><br>
-.>>
+..
 
 .LP
 \fCploticus_end()\fR
 .IP \0
 Finish up the graphic result, write it to the output file, and free up allocated memory.
 
-.ig >>
+.ig
 <br><br><br>
-.>>
+..
 .SH These functions are also available:
 
 
@@ -284,17 +284,17 @@
 .br
 Example: \fCstat = ploticus_getvar( "XFINAL", xf );\fR
 
-.ig >>
+.ig
 <br><br><br>
-.>>
+..
 .LP
 \fCploticus_setvar( char *name, char *value )\fR
 .IP \0
 Set ploticus variable \fCname\fR to \fCvalue\fR.
 
-.ig >>
+.ig
 <br><br><br>
-.>>
+..
 .LP
 \fCgdImagePtr PLGG_getimg( int *width, int *height )\fR
 .IP \0
@@ -307,7 +307,7 @@
 when ploticus was initialized with one of the GD image devices
 (eg. \fCpng\fR or \fCjpeg\fR).
 
-.ig >>
+.ig
 <br>
 <br>
 </td></tr>
@@ -333,4 +333,4 @@
 
 
 </center>
-.>>
+..
